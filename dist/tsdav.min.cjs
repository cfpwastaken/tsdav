"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e,t,r,a,s=require("debug"),o=require("xml-js"),n=require("base-64");function c(e,t,r,a){if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?a:"a"===r?a.call(e):a?a.value:t.get(e)}function d(e,t,r,a,s){if("function"==typeof t||!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return t.set(e,r),r}"function"==typeof SuppressedError&&SuppressedError;const i="__TAURI_TO_IPC_KEY__";class l{constructor(s){e.set(this,void 0),t.set(this,0),r.set(this,[]),a.set(this,void 0),d(this,e,s||(()=>{})),this.id=function(e,t=!1){return window.__TAURI_INTERNALS__.transformCallback(e,t)}(s=>{const o=s.index;if("end"in s)return void(o==c(this,t,"f")?this.cleanupCallback():d(this,a,o));const n=s.message;if(o==c(this,t,"f")){for(c(this,e,"f").call(this,n),d(this,t,c(this,t,"f")+1);c(this,t,"f")in c(this,r,"f");){const a=c(this,r,"f")[c(this,t,"f")];c(this,e,"f").call(this,a),delete c(this,r,"f")[c(this,t,"f")],d(this,t,c(this,t,"f")+1)}c(this,t,"f")===c(this,a,"f")&&this.cleanupCallback()}else c(this,r,"f")[o]=n})}cleanupCallback(){window.__TAURI_INTERNALS__.unregisterCallback(this.id)}set onmessage(t){d(this,e,t)}get onmessage(){return c(this,e,"f")}[(e=new WeakMap,t=new WeakMap,r=new WeakMap,a=new WeakMap,i)](){return`__CHANNEL__:${this.id}`}toJSON(){return this[i]()}}async function p(e,t={},r){return window.__TAURI_INTERNALS__.invoke(e,t,r)}const h="Request cancelled";async function u(e,t){const r=t?.signal;if(r?.aborted)throw new Error(h);const a=t?.maxRedirections,s=t?.connectTimeout,o=t?.proxy,n=t?.danger;t&&(delete t.maxRedirections,delete t.connectTimeout,delete t.proxy,delete t.danger);const c=t?.headers?t.headers instanceof Headers?t.headers:new Headers(t.headers):new Headers,d=new Request(e,t),i=await d.arrayBuffer(),u=0!==i.byteLength?Array.from(new Uint8Array(i)):null;for(const[e,t]of d.headers)c.get(e)||c.set(e,t);const f=(c instanceof Headers?Array.from(c.entries()):Array.isArray(c)?c:Object.entries(c)).map(([e,t])=>[e,"string"==typeof t?t:t.toString()]);if(r?.aborted)throw new Error(h);const m=await p("plugin:http|fetch",{clientConfig:{method:d.method,url:d.url,headers:f,data:u,maxRedirections:a,connectTimeout:s,proxy:o,danger:n}}),v=()=>p("plugin:http|fetch_cancel",{rid:m});if(r?.aborted)throw v(),new Error(h);r?.addEventListener("abort",()=>{v()});const{status:A,statusText:y,url:D,headers:O,rid:V}=await p("plugin:http|fetch_send",{rid:m}),x=[101,103,204,205,304].includes(A)?null:new ReadableStream({start:e=>{const t=new l;t.onmessage=t=>{if(r?.aborted)return void e.error(h);const a=new Uint8Array(t),s=a[a.byteLength-1],o=a.slice(0,a.byteLength-1);1!=s?e.enqueue(o):e.close()},p("plugin:http|fetch_read_body",{rid:V,streamChannel:t}).catch(t=>{e.error(t)})}}),g=new Response(x,{status:A,statusText:y});return Object.defineProperty(g,"url",{value:D}),Object.defineProperty(g,"headers",{value:new Headers(O)}),g}var f;exports.DAVNamespace=void 0,(f=exports.DAVNamespace||(exports.DAVNamespace={})).CALENDAR_SERVER="http://calendarserver.org/ns/",f.CALDAV_APPLE="http://apple.com/ns/ical/",f.CALDAV="urn:ietf:params:xml:ns:caldav",f.CARDDAV="urn:ietf:params:xml:ns:carddav",f.DAV="DAV:";const m={[exports.DAVNamespace.CALDAV]:"xmlns:c",[exports.DAVNamespace.CARDDAV]:"xmlns:card",[exports.DAVNamespace.CALENDAR_SERVER]:"xmlns:cs",[exports.DAVNamespace.CALDAV_APPLE]:"xmlns:ca",[exports.DAVNamespace.DAV]:"xmlns:d"};var v,A;exports.DAVNamespaceShort=void 0,(v=exports.DAVNamespaceShort||(exports.DAVNamespaceShort={})).CALDAV="c",v.CARDDAV="card",v.CALENDAR_SERVER="cs",v.CALDAV_APPLE="ca",v.DAV="d",function(e){e.VEVENT="VEVENT",e.VTODO="VTODO",e.VJOURNAL="VJOURNAL",e.VFREEBUSY="VFREEBUSY",e.VTIMEZONE="VTIMEZONE",e.VALARM="VALARM"}(A||(A={}));const y=e=>{const t=Number(e);if(!Number.isNaN(t))return t;const r=e.toLowerCase();return"true"===r||"false"!==r&&e},D=(e,t)=>{if(!e&&!t)return!0;if(!e||!t)return!1;const r=e.trim(),a=t.trim();if(Math.abs(r.length-a.length)>1)return!1;const s="/"===r.slice(-1)?r.slice(0,-1):r,o="/"===a.slice(-1)?a.slice(0,-1):a;return e.includes(o)||t.includes(s)},O=(e,t)=>{if(!e&&!t)return!0;if(!e||!t)return!1;const r=e.trim(),a=t.trim(),s="/"===r.slice(-1)?r.slice(0,-1):r,o="/"===a.slice(-1)?a.slice(0,-1):a;return e.includes(o)||t.includes(s)},V=e=>e.reduce((e,t)=>({...e,[m[t]]:t}),{}),x=e=>Object.entries(e).reduce((e,[t,r])=>r?{...e,[t]:r}:e,{}),g=(e,t)=>t?{[e]:t}:{},w=(e,t)=>e?t&&0!==t.length?Object.fromEntries(Object.entries(e).filter(([e])=>!t.includes(e))):e:{};var C=Object.freeze({__proto__:null,cleanupFalsy:x,conditionalParam:g,excludeHeaders:w,getDAVAttribute:V,urlContains:O,urlEquals:D});const b=s("tsdav:request"),S=async e=>{var t;const{url:r,init:a,convertIncoming:s=!0,parseOutgoing:n=!0,fetchOptions:c={}}=e,{headers:d={},body:i,namespace:l,method:p,attributes:h}=a,f=s?o.js2xml({_declaration:{_attributes:{version:"1.0",encoding:"utf-8"}},...i,_attributes:h},{compact:!0,spaces:2,elementNameFn:e=>l&&!/^.+:.+/.test(e)?`${l}:${e}`:e}):i,m={...c};delete m.headers;const v=await u(r,{headers:{"Content-Type":"text/xml;charset=UTF-8",...x(d),...c.headers||{}},body:f,method:p,...m}),A=await v.text();if(!v.ok||!(null===(t=v.headers.get("content-type"))||void 0===t?void 0:t.includes("xml"))||!n)return[{href:v.url,ok:v.ok,status:v.status,statusText:v.statusText,raw:A}];const D=o.xml2js(A,{compact:!0,trim:!0,textFn:(e,t)=>{try{const r=t._parent,a=Object.keys(r),s=a[a.length-1],o=r[s];if(o.length>0){o[o.length-1]=y(e)}else r[s]=y(e)}catch(e){b(e.stack)}},elementNameFn:e=>e.replace(/^.+:/,"").replace(/([-_]\w)/g,e=>e[1].toUpperCase()),attributesFn:e=>{const t={...e};return delete t.xmlns,t},ignoreDeclaration:!0});return(Array.isArray(D.multistatus.response)?D.multistatus.response:[D.multistatus.response]).map(e=>{var t,r;if(!e)return{status:v.status,statusText:v.statusText,ok:v.ok};const a=/^\S+\s(?<status>\d+)\s(?<statusText>.+)$/.exec(e.status);return{raw:D,href:e.href,status:(null==a?void 0:a.groups)?Number.parseInt(null==a?void 0:a.groups.status,10):v.status,statusText:null!==(r=null===(t=null==a?void 0:a.groups)||void 0===t?void 0:t.statusText)&&void 0!==r?r:v.statusText,ok:!e.error,error:e.error,responsedescription:e.responsedescription,props:(Array.isArray(e.propstat)?e.propstat:[e.propstat]).reduce((e,t)=>({...e,...null==t?void 0:t.prop}),{})}})},N=async e=>{const{url:t,props:r,depth:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return S({url:t,init:{method:"PROPFIND",headers:w(x({depth:a,...s}),o),namespace:exports.DAVNamespaceShort.DAV,body:{propfind:{_attributes:V([exports.DAVNamespace.CALDAV,exports.DAVNamespace.CALDAV_APPLE,exports.DAVNamespace.CALENDAR_SERVER,exports.DAVNamespace.CARDDAV,exports.DAVNamespace.DAV]),prop:r}}},fetchOptions:n})},E=async e=>{const{url:t,data:r,headers:a,headersToExclude:s,fetchOptions:o={}}=e;return u(t,{method:"PUT",body:r,headers:w(a,s),...o})},T=async e=>{const{url:t,data:r,etag:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return u(t,{method:"PUT",body:r,headers:w(x({"If-Match":a,...s}),o),...n})},$=async e=>{const{url:t,headers:r,etag:a,headersToExclude:s,fetchOptions:o={}}=e;return u(t,{method:"DELETE",headers:w(x({"If-Match":a,...r}),s),...o})};var _=Object.freeze({__proto__:null,createObject:E,davRequest:S,deleteObject:$,propfind:N,updateObject:T});function k(e,t){const r=e=>t.every(t=>e[t]);return Array.isArray(e)?e.every(e=>r(e)):r(e)}const R=(e,t)=>t.reduce((t,r)=>e[r]?t:`${t.length?`${t},`:""}${r.toString()}`,""),U=s("tsdav:collection"),j=async e=>{const{url:t,body:r,depth:a,defaultNamespace:s=exports.DAVNamespaceShort.DAV,headers:o,headersToExclude:n,fetchOptions:c={}}=e,d=await S({url:t,init:{method:"REPORT",headers:w(x({depth:a,...o}),n),namespace:s,body:r},fetchOptions:c});return 1!==d.length||d[0].raw?d:[]},L=async e=>{const{url:t,props:r,depth:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return S({url:t,init:{method:"MKCOL",headers:w(x({depth:a,...s}),o),namespace:exports.DAVNamespaceShort.DAV,body:r?{mkcol:{set:{prop:r}}}:void 0},fetchOptions:n})},H=async e=>{var t,r,a,s,o;const{collection:n,headers:c,headersToExclude:d,fetchOptions:i={}}=e;return null!==(o=null===(s=null===(a=null===(r=null===(t=(await N({url:n.url,props:{[`${exports.DAVNamespaceShort.DAV}:supported-report-set`]:{}},depth:"0",headers:w(c,d),fetchOptions:i}))[0])||void 0===t?void 0:t.props)||void 0===r?void 0:r.supportedReportSet)||void 0===a?void 0:a.supportedReport)||void 0===s?void 0:s.map(e=>Object.keys(e.report)[0]))&&void 0!==o?o:[]},P=async e=>{var t,r,a;const{collection:s,headers:o,headersToExclude:n,fetchOptions:c={}}=e,d=(await N({url:s.url,props:{[`${exports.DAVNamespaceShort.CALENDAR_SERVER}:getctag`]:{}},depth:"0",headers:w(o,n),fetchOptions:c})).filter(e=>O(s.url,e.href))[0];if(!d)throw new Error("Collection does not exist on server");return{isDirty:`${s.ctag}`!=`${null===(t=d.props)||void 0===t?void 0:t.getctag}`,newCtag:null===(a=null===(r=d.props)||void 0===r?void 0:r.getctag)||void 0===a?void 0:a.toString()}},B=e=>{const{url:t,props:r,headers:a,syncLevel:s,syncToken:o,headersToExclude:n,fetchOptions:c}=e;return S({url:t,init:{method:"REPORT",namespace:exports.DAVNamespaceShort.DAV,headers:w({...a},n),body:{"sync-collection":{_attributes:V([exports.DAVNamespace.CALDAV,exports.DAVNamespace.CARDDAV,exports.DAVNamespace.DAV]),"sync-level":s,"sync-token":o,[`${exports.DAVNamespaceShort.DAV}:prop`]:r}}},fetchOptions:c})},I=async e=>{var t,r,a,s,o,n,c,d,i,l,p;const{collection:h,method:u,headers:f,headersToExclude:m,account:v,detailedResult:A,fetchOptions:y={}}=e,D=["accountType","homeUrl"];if(!v||!k(v,D)){if(!v)throw new Error("no account for smartCollectionSync");throw new Error(`account must have ${R(v,D)} before smartCollectionSync`)}const V=null!=u?u:(null===(t=h.reports)||void 0===t?void 0:t.includes("syncCollection"))?"webdav":"basic";if(U(`smart collection sync with type ${v.accountType} and method ${V}`),"webdav"===V){const e=await B({url:h.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${"caldav"===v.accountType?exports.DAVNamespaceShort.CALDAV:exports.DAVNamespaceShort.CARDDAV}:${"caldav"===v.accountType?"calendar-data":"address-data"}`]:{},[`${exports.DAVNamespaceShort.DAV}:displayname`]:{}},syncLevel:1,syncToken:h.syncToken,headers:w(f,m),fetchOptions:y}),t=e.filter(e=>{var t;const r="caldav"===v.accountType?".ics":".vcf";return(null===(t=e.href)||void 0===t?void 0:t.slice(-4))===r}),i=t.filter(e=>404!==e.status).map(e=>e.href),l=t.filter(e=>404===e.status).map(e=>e.href),p=(i.length&&null!==(a=await(null===(r=null==h?void 0:h.objectMultiGet)||void 0===r?void 0:r.call(h,{url:h.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${"caldav"===v.accountType?exports.DAVNamespaceShort.CALDAV:exports.DAVNamespaceShort.CARDDAV}:${"caldav"===v.accountType?"calendar-data":"address-data"}`]:{}},objectUrls:i,depth:"1",headers:w(f,m),fetchOptions:y})))&&void 0!==a?a:[]).map(e=>{var t,r,a,s,o,n,c,d,i,l;return{url:null!==(t=e.href)&&void 0!==t?t:"",etag:null===(r=e.props)||void 0===r?void 0:r.getetag,data:"caldav"===(null==v?void 0:v.accountType)?null!==(o=null===(s=null===(a=e.props)||void 0===a?void 0:a.calendarData)||void 0===s?void 0:s._cdata)&&void 0!==o?o:null===(n=e.props)||void 0===n?void 0:n.calendarData:null!==(i=null===(d=null===(c=e.props)||void 0===c?void 0:c.addressData)||void 0===d?void 0:d._cdata)&&void 0!==i?i:null===(l=e.props)||void 0===l?void 0:l.addressData}}),u=null!==(s=h.objects)&&void 0!==s?s:[],D=p.filter(e=>u.every(t=>!O(t.url,e.url))),V=u.reduce((e,t)=>{const r=p.find(e=>O(e.url,t.url));return r&&r.etag&&r.etag!==t.etag?[...e,r]:e},[]),x=l.map(e=>({url:e,etag:""})),g=u.filter(e=>p.some(t=>O(e.url,t.url)&&t.etag===e.etag));return{...h,objects:A?{created:D,updated:V,deleted:x}:[...g,...D,...V],syncToken:null!==(d=null===(c=null===(n=null===(o=e[0])||void 0===o?void 0:o.raw)||void 0===n?void 0:n.multistatus)||void 0===c?void 0:c.syncToken)&&void 0!==d?d:h.syncToken}}if("basic"===V){const{isDirty:e,newCtag:t}=await P({collection:h,headers:w(f,m),fetchOptions:y}),r=null!==(i=h.objects)&&void 0!==i?i:[],a=null!==(p=await(null===(l=h.fetchObjects)||void 0===l?void 0:l.call(h,{collection:h,headers:w(f,m),fetchOptions:y})))&&void 0!==p?p:[],s=a.filter(e=>r.every(t=>!O(t.url,e.url))),o=r.reduce((e,t)=>{const r=a.find(e=>O(e.url,t.url));return r&&r.etag&&r.etag!==t.etag?[...e,r]:e},[]),n=r.filter(e=>a.every(t=>!O(t.url,e.url))),c=r.filter(e=>a.some(t=>O(e.url,t.url)&&t.etag===e.etag));if(e)return{...h,objects:A?{created:s,updated:o,deleted:n}:[...c,...s,...o],ctag:t}}return A?{...h,objects:{created:[],updated:[],deleted:[]}}:h};var M=Object.freeze({__proto__:null,collectionQuery:j,isCollectionDirty:P,makeCollection:L,smartCollectionSync:I,supportedReportSet:H,syncCollection:B});const F=s("tsdav:addressBook"),z=async e=>{const{url:t,props:r,filters:a,depth:s,headers:o,headersToExclude:n,fetchOptions:c={}}=e;return j({url:t,body:{"addressbook-query":x({_attributes:V([exports.DAVNamespace.CARDDAV,exports.DAVNamespace.DAV]),[`${exports.DAVNamespaceShort.DAV}:prop`]:r,filter:null!=a?a:{"prop-filter":{_attributes:{name:"FN"}}}})},defaultNamespace:exports.DAVNamespaceShort.CARDDAV,depth:s,headers:w(o,n),fetchOptions:c})},q=async e=>{const{url:t,props:r,objectUrls:a,depth:s,headers:o,headersToExclude:n,fetchOptions:c={}}=e;return j({url:t,body:{"addressbook-multiget":x({_attributes:V([exports.DAVNamespace.DAV,exports.DAVNamespace.CARDDAV]),[`${exports.DAVNamespaceShort.DAV}:prop`]:r,[`${exports.DAVNamespaceShort.DAV}:href`]:a})},defaultNamespace:exports.DAVNamespaceShort.CARDDAV,depth:s,headers:w(o,n),fetchOptions:c})},Z=async e=>{const{account:t,headers:r,props:a,headersToExclude:s,fetchOptions:o={}}=null!=e?e:{},n=["homeUrl","rootUrl"];if(!t||!k(t,n)){if(!t)throw new Error("no account for fetchAddressBooks");throw new Error(`account must have ${R(t,n)} before fetchAddressBooks`)}const c=await N({url:t.homeUrl,props:null!=a?a:{[`${exports.DAVNamespaceShort.DAV}:displayname`]:{},[`${exports.DAVNamespaceShort.CALENDAR_SERVER}:getctag`]:{},[`${exports.DAVNamespaceShort.DAV}:resourcetype`]:{},[`${exports.DAVNamespaceShort.DAV}:sync-token`]:{}},depth:"1",headers:w(r,s),fetchOptions:o});return Promise.all(c.filter(e=>{var t,r;return Object.keys(null!==(r=null===(t=e.props)||void 0===t?void 0:t.resourcetype)&&void 0!==r?r:{}).includes("addressbook")}).map(e=>{var r,a,s,o,n,c,d,i,l;const p=null!==(s=null===(a=null===(r=e.props)||void 0===r?void 0:r.displayname)||void 0===a?void 0:a._cdata)&&void 0!==s?s:null===(o=e.props)||void 0===o?void 0:o.displayname;return F(`Found address book named ${"string"==typeof p?p:""},\n             props: ${JSON.stringify(e.props)}`),{url:new URL(null!==(n=e.href)&&void 0!==n?n:"",null!==(c=t.rootUrl)&&void 0!==c?c:"").href,ctag:null===(d=e.props)||void 0===d?void 0:d.getctag,displayName:"string"==typeof p?p:"",resourcetype:Object.keys(null===(i=e.props)||void 0===i?void 0:i.resourcetype),syncToken:null===(l=e.props)||void 0===l?void 0:l.syncToken}}).map(async e=>({...e,reports:await H({collection:e,headers:w(r,s),fetchOptions:o})})))},Q=async e=>{const{addressBook:t,headers:r,objectUrls:a,headersToExclude:s,urlFilter:o=e=>e,useMultiGet:n=!0,fetchOptions:c={}}=e;F(`Fetching vcards from ${null==t?void 0:t.url}`);const d=["url"];if(!t||!k(t,d)){if(!t)throw new Error("cannot fetchVCards for undefined addressBook");throw new Error(`addressBook must have ${R(t,d)} before fetchVCards`)}const i=(null!=a?a:(await z({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{}},depth:"1",headers:w(r,s),fetchOptions:c})).map(e=>{var t;return e.ok&&null!==(t=e.href)&&void 0!==t?t:""})).map(e=>e.startsWith("http")||!e?e:new URL(e,t.url).href).filter(o).map(e=>new URL(e).pathname);let l=[];return i.length>0&&(l=n?await q({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${exports.DAVNamespaceShort.CARDDAV}:address-data`]:{}},objectUrls:i,depth:"1",headers:w(r,s),fetchOptions:c}):await z({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${exports.DAVNamespaceShort.CARDDAV}:address-data`]:{}},depth:"1",headers:w(r,s),fetchOptions:c})),l.map(e=>{var r,a,s,o,n,c;return{url:new URL(null!==(r=e.href)&&void 0!==r?r:"",t.url).href,etag:null===(a=e.props)||void 0===a?void 0:a.getetag,data:null!==(n=null===(o=null===(s=e.props)||void 0===s?void 0:s.addressData)||void 0===o?void 0:o._cdata)&&void 0!==n?n:null===(c=e.props)||void 0===c?void 0:c.addressData}})},G=async e=>{const{addressBook:t,vCardString:r,filename:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return E({url:new URL(a,t.url).href,data:r,headers:w({"content-type":"text/vcard; charset=utf-8","If-None-Match":"*",...s},o),fetchOptions:n})},W=async e=>{const{vCard:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return T({url:t.url,data:t.data,etag:t.etag,headers:w({"content-type":"text/vcard; charset=utf-8",...r},a),fetchOptions:s})},J=async e=>{const{vCard:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return $({url:t.url,etag:t.etag,headers:w(r,a),fetchOptions:s})};var K=Object.freeze({__proto__:null,addressBookMultiGet:q,addressBookQuery:z,createVCard:G,deleteVCard:J,fetchAddressBooks:Z,fetchVCards:Q,updateVCard:W});const Y=s("tsdav:calendar"),X=async e=>{var t,r,a;const{account:s,headers:o,headersToExclude:n,fetchOptions:c={}}=e,d=["principalUrl","rootUrl"];if(!k(s,d))throw new Error(`account must have ${R(s,d)} before fetchUserAddresses`);Y(`Fetch user addresses from ${s.principalUrl}`);const i=(await N({url:s.principalUrl,props:{[`${exports.DAVNamespaceShort.CALDAV}:calendar-user-address-set`]:{}},depth:"0",headers:w(o,n),fetchOptions:c})).find(e=>O(s.principalUrl,e.href));if(!i||!i.ok)throw new Error("cannot find calendarUserAddresses");const l=(null===(a=null===(r=null===(t=null==i?void 0:i.props)||void 0===t?void 0:t.calendarUserAddressSet)||void 0===r?void 0:r.href)||void 0===a?void 0:a.filter(Boolean))||[];return Y(`Fetched calendar user addresses ${l}`),l},ee=async e=>{const{url:t,props:r,filters:a,timezone:s,depth:o,headers:n,headersToExclude:c,fetchOptions:d={}}=e;return j({url:t,body:{"calendar-query":x({_attributes:V([exports.DAVNamespace.CALDAV,exports.DAVNamespace.CALENDAR_SERVER,exports.DAVNamespace.CALDAV_APPLE,exports.DAVNamespace.DAV]),[`${exports.DAVNamespaceShort.DAV}:prop`]:r,filter:a,timezone:s})},defaultNamespace:exports.DAVNamespaceShort.CALDAV,depth:o,headers:w(n,c),fetchOptions:d})},te=async e=>{const{url:t,props:r,objectUrls:a,filters:s,timezone:o,depth:n,headers:c,headersToExclude:d,fetchOptions:i={}}=e;return j({url:t,body:{"calendar-multiget":x({_attributes:V([exports.DAVNamespace.DAV,exports.DAVNamespace.CALDAV]),[`${exports.DAVNamespaceShort.DAV}:prop`]:r,[`${exports.DAVNamespaceShort.DAV}:href`]:a,filter:s,timezone:o})},defaultNamespace:exports.DAVNamespaceShort.CALDAV,depth:n,headers:w(c,d),fetchOptions:i})},re=async e=>{const{url:t,props:r,depth:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return S({url:t,init:{method:"MKCALENDAR",headers:w(x({depth:a,...s}),o),namespace:exports.DAVNamespaceShort.DAV,body:{[`${exports.DAVNamespaceShort.CALDAV}:mkcalendar`]:{_attributes:V([exports.DAVNamespace.DAV,exports.DAVNamespace.CALDAV,exports.DAVNamespace.CALDAV_APPLE]),set:{prop:r}}}},fetchOptions:n})},ae=async e=>{const{headers:t,account:r,props:a,projectedProps:s,headersToExclude:o,fetchOptions:n={}}=null!=e?e:{},c=["homeUrl","rootUrl"];if(!r||!k(r,c)){if(!r)throw new Error("no account for fetchCalendars");throw new Error(`account must have ${R(r,c)} before fetchCalendars`)}const d=await N({url:r.homeUrl,props:null!=a?a:{[`${exports.DAVNamespaceShort.CALDAV}:calendar-description`]:{},[`${exports.DAVNamespaceShort.CALDAV}:calendar-timezone`]:{},[`${exports.DAVNamespaceShort.DAV}:displayname`]:{},[`${exports.DAVNamespaceShort.CALDAV_APPLE}:calendar-color`]:{},[`${exports.DAVNamespaceShort.CALENDAR_SERVER}:getctag`]:{},[`${exports.DAVNamespaceShort.DAV}:resourcetype`]:{},[`${exports.DAVNamespaceShort.CALDAV}:supported-calendar-component-set`]:{},[`${exports.DAVNamespaceShort.DAV}:sync-token`]:{}},depth:"1",headers:w(t,o),fetchOptions:n});return Promise.all(d.filter(e=>{var t,r;return Object.keys(null!==(r=null===(t=e.props)||void 0===t?void 0:t.resourcetype)&&void 0!==r?r:{}).includes("calendar")}).filter(e=>{var t,r,a,s,o,n;return(Array.isArray(null===(r=null===(t=e.props)||void 0===t?void 0:t.supportedCalendarComponentSet)||void 0===r?void 0:r.comp)?null===(a=e.props)||void 0===a?void 0:a.supportedCalendarComponentSet.comp.map(e=>e._attributes.name):[null===(n=null===(o=null===(s=e.props)||void 0===s?void 0:s.supportedCalendarComponentSet)||void 0===o?void 0:o.comp)||void 0===n?void 0:n._attributes.name]).some(e=>Object.values(A).includes(e))}).map(e=>{var t,a,o,n,c,d,i,l,p,h,u,f,m,v,A,y;const D=null===(t=e.props)||void 0===t?void 0:t.calendarDescription,O=null===(a=e.props)||void 0===a?void 0:a.calendarTimezone;return{description:"string"==typeof D?D:"",timezone:"string"==typeof O?O:"",url:new URL(null!==(o=e.href)&&void 0!==o?o:"",null!==(n=r.rootUrl)&&void 0!==n?n:"").href,ctag:null===(c=e.props)||void 0===c?void 0:c.getctag,calendarColor:null===(d=e.props)||void 0===d?void 0:d.calendarColor,displayName:null!==(l=null===(i=e.props)||void 0===i?void 0:i.displayname._cdata)&&void 0!==l?l:null===(p=e.props)||void 0===p?void 0:p.displayname,components:Array.isArray(null===(h=e.props)||void 0===h?void 0:h.supportedCalendarComponentSet.comp)?null===(u=e.props)||void 0===u?void 0:u.supportedCalendarComponentSet.comp.map(e=>e._attributes.name):[null===(m=null===(f=e.props)||void 0===f?void 0:f.supportedCalendarComponentSet.comp)||void 0===m?void 0:m._attributes.name],resourcetype:Object.keys(null===(v=e.props)||void 0===v?void 0:v.resourcetype),syncToken:null===(A=e.props)||void 0===A?void 0:A.syncToken,...g("projectedProps",Object.fromEntries(Object.entries(null!==(y=e.props)&&void 0!==y?y:{}).filter(([e])=>null==s?void 0:s[e])))}}).map(async e=>({...e,reports:await H({collection:e,headers:w(t,o),fetchOptions:n})})))},se=async e=>{const{calendar:t,objectUrls:r,filters:a,timeRange:s,headers:o,expand:n,urlFilter:c=e=>Boolean(null==e?void 0:e.includes(".ics")),useMultiGet:d=!0,headersToExclude:i,fetchOptions:l={}}=e;if(s){const e=/^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$/i,t=/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(\.\d+)?(([+-]\d\d:\d\d)|Z)?$/i;if(!(e.test(s.start)&&e.test(s.end)||t.test(s.start)&&t.test(s.end)))throw new Error("invalid timeRange format, not in ISO8601")}Y(`Fetching calendar objects from ${null==t?void 0:t.url}`);const p=["url"];if(!t||!k(t,p)){if(!t)throw new Error("cannot fetchCalendarObjects for undefined calendar");throw new Error(`calendar must have ${R(t,p)} before fetchCalendarObjects`)}const h=null!=a?a:[{"comp-filter":{_attributes:{name:"VCALENDAR"},"comp-filter":{_attributes:{name:"VEVENT"},...s?{"time-range":{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}}}],u=(null!=r?r:(await ee({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{...n&&s?{[`${exports.DAVNamespaceShort.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},filters:h,depth:"1",headers:w(o,i),fetchOptions:l})).map(e=>{var t;return null!==(t=e.href)&&void 0!==t?t:""})).map(e=>e.startsWith("http")||!e?e:new URL(e,t.url).href).filter(c).map(e=>new URL(e).pathname);let f=[];return u.length>0&&(f=!d||n?await ee({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${exports.DAVNamespaceShort.CALDAV}:calendar-data`]:{...n&&s?{[`${exports.DAVNamespaceShort.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},filters:h,depth:"1",headers:w(o,i),fetchOptions:l}):await te({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${exports.DAVNamespaceShort.CALDAV}:calendar-data`]:{...n&&s?{[`${exports.DAVNamespaceShort.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},objectUrls:u,depth:"1",headers:w(o,i),fetchOptions:l})),f.map(e=>{var r,a,s,o,n,c;return{url:new URL(null!==(r=e.href)&&void 0!==r?r:"",t.url).href,etag:`${null===(a=e.props)||void 0===a?void 0:a.getetag}`,data:null!==(n=null===(o=null===(s=e.props)||void 0===s?void 0:s.calendarData)||void 0===o?void 0:o._cdata)&&void 0!==n?n:null===(c=e.props)||void 0===c?void 0:c.calendarData}})},oe=async e=>{const{calendar:t,iCalString:r,filename:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return E({url:new URL(a,t.url).href,data:r,headers:w({"content-type":"text/calendar; charset=utf-8","If-None-Match":"*",...s},o),fetchOptions:n})},ne=async e=>{const{calendarObject:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return T({url:t.url,data:t.data,etag:t.etag,headers:w({"content-type":"text/calendar; charset=utf-8",...r},a),fetchOptions:s})},ce=async e=>{const{calendarObject:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return $({url:t.url,etag:t.etag,headers:w(r,a),fetchOptions:s})},de=async e=>{var t;const{oldCalendars:r,account:a,detailedResult:s,headers:o,headersToExclude:n,fetchOptions:c={}}=e;if(!a)throw new Error("Must have account before syncCalendars");const d=null!==(t=null!=r?r:a.calendars)&&void 0!==t?t:[],i=await ae({account:a,headers:w(o,n),fetchOptions:c}),l=i.filter(e=>d.every(t=>!O(t.url,e.url)));Y(`new calendars: ${l.map(e=>e.displayName)}`);const p=d.reduce((e,t)=>{const r=i.find(e=>O(e.url,t.url));return r&&(r.syncToken&&`${r.syncToken}`!=`${t.syncToken}`||r.ctag&&`${r.ctag}`!=`${t.ctag}`)?[...e,r]:e},[]);Y(`updated calendars: ${p.map(e=>e.displayName)}`);const h=await Promise.all(p.map(async e=>await I({collection:{...e,objectMultiGet:te},method:"webdav",headers:w(o,n),account:a,fetchOptions:c}))),u=d.filter(e=>i.every(t=>!O(t.url,e.url)));Y(`deleted calendars: ${u.map(e=>e.displayName)}`);const f=d.filter(e=>i.some(t=>O(t.url,e.url)&&(t.syncToken&&`${t.syncToken}`!=`${e.syncToken}`||t.ctag&&`${t.ctag}`!=`${e.ctag}`)));return s?{created:l,updated:p,deleted:u}:[...f,...l,...h]},ie=async e=>{const{url:t,timeRange:r,depth:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;if(!r)throw new Error("timeRange is required");{const e=/^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$/i,t=/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(\.\d+)?(([+-]\d\d:\d\d)|Z)?$/i;if(!(e.test(r.start)&&e.test(r.end)||t.test(r.start)&&t.test(r.end)))throw new Error("invalid timeRange format, not in ISO8601")}return(await j({url:t,body:{"free-busy-query":x({_attributes:V([exports.DAVNamespace.CALDAV]),[`${exports.DAVNamespaceShort.CALDAV}:time-range`]:{_attributes:{start:`${new Date(r.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(r.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}})},defaultNamespace:exports.DAVNamespaceShort.CALDAV,depth:a,headers:w(s,o),fetchOptions:n}))[0]};var le=Object.freeze({__proto__:null,calendarMultiGet:te,calendarQuery:ee,createCalendarObject:oe,deleteCalendarObject:ce,fetchCalendarObjects:se,fetchCalendarUserAddresses:X,fetchCalendars:ae,freeBusyQuery:ie,makeCalendar:re,syncCalendars:de,updateCalendarObject:ne});const pe=s("tsdav:account"),he=async e=>{var t,r;pe("Service discovery...");const{account:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e,c=new URL(a.serverUrl),d=new URL(`/.well-known/${a.accountType}`,c);d.protocol=null!==(t=c.protocol)&&void 0!==t?t:"http";try{const e=await u(d.href,{headers:w(s,o),method:"PROPFIND",redirect:"manual",...n});if(e.status>=300&&e.status<400){const t=e.headers.get("Location");if("string"==typeof t&&t.length){pe(`Service discovery redirected to ${t}`);const e=new URL(t,c);return e.hostname===d.hostname&&d.port&&!e.port&&(e.port=d.port),e.protocol=null!==(r=c.protocol)&&void 0!==r?r:"http",e.href}}}catch(e){pe(`Service discovery failed: ${e.stack}`)}return c.href},ue=async e=>{var t,r,a,s,o;const{account:n,headers:c,headersToExclude:d,fetchOptions:i={}}=e,l=["rootUrl"];if(!k(n,l))throw new Error(`account must have ${R(n,l)} before fetchPrincipalUrl`);pe(`Fetching principal url from path ${n.rootUrl}`);const[p]=await N({url:n.rootUrl,props:{[`${exports.DAVNamespaceShort.DAV}:current-user-principal`]:{}},depth:"0",headers:w(c,d),fetchOptions:i});if(!p.ok&&(pe(`Fetch principal url failed: ${p.statusText}`),401===p.status))throw new Error("Invalid credentials");return pe(`Fetched principal url ${null===(r=null===(t=p.props)||void 0===t?void 0:t.currentUserPrincipal)||void 0===r?void 0:r.href}`),new URL(null!==(o=null===(s=null===(a=p.props)||void 0===a?void 0:a.currentUserPrincipal)||void 0===s?void 0:s.href)&&void 0!==o?o:"",n.rootUrl).href},fe=async e=>{var t,r;const{account:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e,c=["principalUrl","rootUrl"];if(!k(a,c))throw new Error(`account must have ${R(a,c)} before fetchHomeUrl`);pe(`Fetch home url from ${a.principalUrl}`);const d=await N({url:a.principalUrl,props:"caldav"===a.accountType?{[`${exports.DAVNamespaceShort.CALDAV}:calendar-home-set`]:{}}:{[`${exports.DAVNamespaceShort.CARDDAV}:addressbook-home-set`]:{}},depth:"0",headers:w(s,o),fetchOptions:n}),i=d.find(e=>O(a.principalUrl,e.href));if(!i||!i.ok)throw pe(`Fetch home url failed with status ${null==i?void 0:i.statusText} and error ${JSON.stringify(d.map(e=>e.error))}`),new Error("cannot find homeUrl");const l=new URL("caldav"===a.accountType?null===(t=null==i?void 0:i.props)||void 0===t?void 0:t.calendarHomeSet.href:null===(r=null==i?void 0:i.props)||void 0===r?void 0:r.addressbookHomeSet.href,a.rootUrl).href;return pe(`Fetched home url ${l}`),l},me=async e=>{const{account:t,headers:r,loadCollections:a=!1,loadObjects:s=!1,headersToExclude:o,fetchOptions:n={}}=e,c={...t};return c.rootUrl=await he({account:t,headers:w(r,o),fetchOptions:n}),c.principalUrl=await ue({account:c,headers:w(r,o),fetchOptions:n}),c.homeUrl=await fe({account:c,headers:w(r,o),fetchOptions:n}),(a||s)&&("caldav"===t.accountType?c.calendars=await ae({headers:w(r,o),account:c,fetchOptions:n}):"carddav"===t.accountType&&(c.addressBooks=await Z({headers:w(r,o),account:c,fetchOptions:n}))),s&&("caldav"===t.accountType&&c.calendars?c.calendars=await Promise.all(c.calendars.map(async e=>({...e,objects:await se({calendar:e,headers:w(r,o),fetchOptions:n})}))):"carddav"===t.accountType&&c.addressBooks&&(c.addressBooks=await Promise.all(c.addressBooks.map(async e=>({...e,objects:await Q({addressBook:e,headers:w(r,o),fetchOptions:n})}))))),c};var ve=Object.freeze({__proto__:null,createAccount:me,fetchHomeUrl:fe,fetchPrincipalUrl:ue,serviceDiscovery:he});const Ae=s("tsdav:authHelper"),ye=(e,t)=>(...r)=>e({...t,...r[0]}),De=e=>(Ae(`Basic auth token generated: ${n.encode(`${e.username}:${e.password}`)}`),{authorization:`Basic ${n.encode(`${e.username}:${e.password}`)}`}),Oe=async(e,t)=>{const r=["authorizationCode","redirectUrl","clientId","clientSecret","tokenUrl"];if(!k(e,r))throw new Error(`Oauth credentials missing: ${R(e,r)}`);const a=new URLSearchParams({grant_type:"authorization_code",code:e.authorizationCode,redirect_uri:e.redirectUrl,client_id:e.clientId,client_secret:e.clientSecret});Ae(e.tokenUrl),Ae(a.toString());const s=await u(e.tokenUrl,{method:"POST",body:a.toString(),headers:{"content-length":`${a.toString().length}`,"content-type":"application/x-www-form-urlencoded"},...null!=t?t:{}});if(s.ok){return await s.json()}return Ae(`Fetch Oauth tokens failed: ${await s.text()}`),{}},Ve=async(e,t)=>{const r=["refreshToken","clientId","clientSecret","tokenUrl"];if(!k(e,r))throw new Error(`Oauth credentials missing: ${R(e,r)}`);const a=new URLSearchParams({client_id:e.clientId,client_secret:e.clientSecret,refresh_token:e.refreshToken,grant_type:"refresh_token"}),s=await u(e.tokenUrl,{method:"POST",body:a.toString(),headers:{"Content-Type":"application/x-www-form-urlencoded"},...null!=t?t:{}});if(s.ok){return await s.json()}return Ae(`Refresh access token failed: ${await s.text()}`),{}},xe=async(e,t)=>{var r;Ae("Fetching oauth headers");let a={};return e.refreshToken?(e.refreshToken&&!e.accessToken||Date.now()>(null!==(r=e.expiration)&&void 0!==r?r:0))&&(a=await Ve(e,t)):a=await Oe(e,t),Ae(`Oauth tokens fetched: ${a.access_token}`),{tokens:a,headers:{authorization:`Bearer ${a.access_token}`}}};var ge=Object.freeze({__proto__:null,defaultParam:ye,fetchOauthTokens:Oe,getBasicAuthHeaders:De,getOauthHeaders:xe,refreshAccessToken:Ve});const we=async e=>{var t;const{serverUrl:r,credentials:a,authMethod:s,defaultAccountType:o,authFunction:n}=e;let c={};switch(s){case"Basic":c=De(a);break;case"Oauth":c=(await xe(a)).headers;break;case"Digest":c={Authorization:`Digest ${a.digestString}`};break;case"Custom":c=null!==(t=await(null==n?void 0:n(a)))&&void 0!==t?t:{};break;default:throw new Error("Invalid auth method")}const d=o?await me({account:{serverUrl:r,credentials:a,accountType:o},headers:c}):void 0,i=ye(E,{url:r,headers:c}),l=ye(T,{headers:c,url:r}),p=ye($,{headers:c,url:r}),h=ye(N,{headers:c}),u=ye(j,{headers:c}),f=ye(L,{headers:c}),m=ye(B,{headers:c}),v=ye(H,{headers:c}),A=ye(P,{headers:c}),y=ye(I,{headers:c,account:d}),D=ye(ee,{headers:c}),O=ye(te,{headers:c}),V=ye(re,{headers:c}),x=ye(ae,{headers:c,account:d}),g=ye(X,{headers:c,account:d}),w=ye(se,{headers:c}),C=ye(oe,{headers:c}),b=ye(ne,{headers:c}),_=ye(ce,{headers:c}),k=ye(de,{account:d,headers:c}),R=ye(z,{headers:c}),U=ye(q,{headers:c});return{davRequest:async e=>{const{init:t,...r}=e,{headers:a,...s}=t;return S({...r,init:{...s,headers:{...c,...a}}})},propfind:h,createAccount:async e=>{const{account:t,headers:s,loadCollections:o,loadObjects:n}=e;return me({account:{serverUrl:r,credentials:a,...t},headers:{...c,...s},loadCollections:o,loadObjects:n})},createObject:i,updateObject:l,deleteObject:p,calendarQuery:D,addressBookQuery:R,collectionQuery:u,makeCollection:f,calendarMultiGet:O,makeCalendar:V,syncCollection:m,supportedReportSet:v,isCollectionDirty:A,smartCollectionSync:y,fetchCalendars:x,fetchCalendarUserAddresses:g,fetchCalendarObjects:w,createCalendarObject:C,updateCalendarObject:b,deleteCalendarObject:_,syncCalendars:k,fetchAddressBooks:ye(Z,{account:d,headers:c}),addressBookMultiGet:U,fetchVCards:ye(Q,{headers:c}),createVCard:ye(G,{headers:c}),updateVCard:ye(W,{headers:c}),deleteVCard:ye(J,{headers:c})}};class Ce{constructor(e){var t,r,a;this.serverUrl=e.serverUrl,this.credentials=e.credentials,this.authMethod=null!==(t=e.authMethod)&&void 0!==t?t:"Basic",this.accountType=null!==(r=e.defaultAccountType)&&void 0!==r?r:"caldav",this.authFunction=e.authFunction,this.fetchOptions=null!==(a=e.fetchOptions)&&void 0!==a?a:{}}async login(){var e;switch(this.authMethod){case"Basic":this.authHeaders=De(this.credentials);break;case"Oauth":this.authHeaders=(await xe(this.credentials,this.fetchOptions)).headers;break;case"Digest":this.authHeaders={Authorization:`Digest ${this.credentials.digestString}`};break;case"Custom":this.authHeaders=await(null===(e=this.authFunction)||void 0===e?void 0:e.call(this,this.credentials));break;default:throw new Error("Invalid auth method")}this.account=this.accountType?await me({account:{serverUrl:this.serverUrl,credentials:this.credentials,accountType:this.accountType},headers:this.authHeaders,fetchOptions:this.fetchOptions}):void 0}async davRequest(e){const{init:t,...r}=e,{headers:a,...s}=t;return S({...r,init:{...s,headers:{...this.authHeaders,...a}},fetchOptions:this.fetchOptions})}async createObject(...e){return ye(E,{url:this.serverUrl,headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async updateObject(...e){return ye(T,{url:this.serverUrl,headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async deleteObject(...e){return ye($,{url:this.serverUrl,headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async propfind(...e){return ye(N,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async createAccount(e){const{account:t,headers:r,loadCollections:a,loadObjects:s,fetchOptions:o}=e;return me({account:{serverUrl:this.serverUrl,credentials:this.credentials,...t},headers:{...this.authHeaders,...r},loadCollections:a,loadObjects:s,fetchOptions:null!=o?o:this.fetchOptions})}async collectionQuery(...e){return ye(j,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async makeCollection(...e){return ye(L,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async syncCollection(...e){return ye(B,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async supportedReportSet(...e){return ye(H,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async isCollectionDirty(...e){return ye(P,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async smartCollectionSync(...e){return ye(I,{headers:this.authHeaders,fetchOptions:this.fetchOptions,account:this.account})(e[0])}async calendarQuery(...e){return ye(ee,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async makeCalendar(...e){return ye(re,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async calendarMultiGet(...e){return ye(te,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async fetchCalendars(...e){return ye(ae,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(null==e?void 0:e[0])}async fetchCalendarUserAddresses(...e){return ye(X,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(null==e?void 0:e[0])}async fetchCalendarObjects(...e){return ye(se,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async createCalendarObject(...e){return ye(oe,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async updateCalendarObject(...e){return ye(ne,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async deleteCalendarObject(...e){return ye(ce,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async syncCalendars(...e){return ye(de,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(e[0])}async addressBookQuery(...e){return ye(z,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async addressBookMultiGet(...e){return ye(q,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async fetchAddressBooks(...e){return ye(Z,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(null==e?void 0:e[0])}async fetchVCards(...e){return ye(Q,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async createVCard(...e){return ye(G,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async updateVCard(...e){return ye(W,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async deleteVCard(...e){return ye(J,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}}var be=Object.freeze({__proto__:null,DAVClient:Ce,createDAVClient:we}),Se={DAVNamespace:exports.DAVNamespace,DAVNamespaceShort:exports.DAVNamespaceShort,DAVAttributeMap:m,...be,..._,...M,...ve,...K,...le,...ge,...C};exports.DAVAttributeMap=m,exports.DAVClient=Ce,exports.addressBookMultiGet=q,exports.addressBookQuery=z,exports.calendarMultiGet=te,exports.calendarQuery=ee,exports.cleanupFalsy=x,exports.collectionQuery=j,exports.createAccount=me,exports.createCalendarObject=oe,exports.createDAVClient=we,exports.createObject=E,exports.createVCard=G,exports.davRequest=S,exports.default=Se,exports.deleteCalendarObject=ce,exports.deleteObject=$,exports.deleteVCard=J,exports.fetchAddressBooks=Z,exports.fetchCalendarObjects=se,exports.fetchCalendarUserAddresses=X,exports.fetchCalendars=ae,exports.fetchOauthTokens=Oe,exports.fetchVCards=Q,exports.freeBusyQuery=ie,exports.getBasicAuthHeaders=De,exports.getDAVAttribute=V,exports.getOauthHeaders=xe,exports.isCollectionDirty=P,exports.makeCalendar=re,exports.propfind=N,exports.refreshAccessToken=Ve,exports.smartCollectionSync=I,exports.supportedReportSet=H,exports.syncCalendars=de,exports.syncCollection=B,exports.updateCalendarObject=ne,exports.updateObject=T,exports.updateVCard=W,exports.urlContains=O,exports.urlEquals=D;
